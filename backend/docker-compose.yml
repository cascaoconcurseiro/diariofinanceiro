version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: diario-postgres
    environment:
      POSTGRES_DB: diario_financeiro
      POSTGRES_USER: diario_user
      POSTGRES_PASSWORD: diario_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - diario-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U diario_user -d diario_financeiro"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: diario-redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - diario-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diario-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://diario_user:diario_password@postgres:5432/diario_financeiro
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      PORT: 3000
      FRONTEND_URL: http://localhost:5173
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - diario-network
    restart: unless-stopped

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: diario-adminer
    ports:
      - "8080:8080"
    networks:
      - diario-network
    depends_on:
      - postgres

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: diario-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    networks:
      - diario-network
    depends_on:
      - redis

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  diario-network:
    driver: bridge